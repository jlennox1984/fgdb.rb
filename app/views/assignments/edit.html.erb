<h1><%= @action_title || "Editing" %> assignment</h1>

<% if @assignments.length > 1 %>
<h2>Editing multiple assignments at once:</h2>
<% for x in @assignments %>
  <%= x.description %><br />
<% end %>
<% end %>

<%= javascript_tag "assignment_contact_id = #{@assignment.contact_id.to_json}; assignment_shift_limit = #{Default["volskedj_shift_limit"].to_i.to_json};" %>

<%= javascript_tag "function check_contact_limit() {
  if($('contact__shift_count')) {
    var contact_shift_count = JSON.parse($('contact__shift_count').innerHTML);
  if(parseInt($('assignment_contact_id').value) != assignment_contact_id) {
    var my_real_programs = #{@assignment.real_programs.to_json};
    for(var i = 0; i < my_real_programs.length; i++) {
      if(contact_shift_count[my_real_programs[i]] >= assignment_shift_limit) {
        contact_shift_count[my_real_programs[i]] = contact_shift_count[my_real_programs[i]] + 1;
    if(!confirm('This contact will be scheduled for ' + contact_shift_count[my_real_programs[i]] + ' future ' + my_real_programs[i] + ' shifts now, which is over the limit of ' + assignment_shift_limit + ' shifts. Would you like to continue?')) {
      return false;
    }
      }
  }
  }
}
    return true;
}" %>

<fieldset>
<%= form_for(@assignment, :url => @my_url, :html => ((@assignment.class == Assignment) ? {:onSubmit => "return check_contact_limit();"} : {})) do |f| %>
  <% @assignments.each do |x| %>
    <%= error_messages_for 'assignment', :object => x %>
  <% end %>

  <%= render :partial => "assignments/form", :locals => {:f => f} %>

  <p>
    <%= f.submit "Update" %>
  </p>
<% end %>
</fieldset>

<%= link_to 'Back', sked_url(@referer, @assignment.class == Assignment ? @assignment.volunteer_shift.date_anchor : @assignment.volunteer_default_shift.weekday_name) %>

